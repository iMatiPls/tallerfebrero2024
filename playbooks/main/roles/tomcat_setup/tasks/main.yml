---
- name: Install Podman and Git on Debian
  ansible.builtin.apt:
    name: git, podman
    state: present
    update_cache: yes
  when: ansible_facts['os_family'] == "Debian"
  become: yes

- name: Install Podman and Git on RHEL
  ansible.builtin.yum:
    name: git, podman
    state: present
  when: ansible_facts['os_family'] == "RedHat"
  become: yes

- name: Check if the .git directory exists
  ansible.builtin.stat:
    path: "{{ repository.dest }}/.git"
  register: git_directory_check

- name: Clone Tomcat tutorial repository if not already cloned
  ansible.builtin.git:
    repo: "{{ repository.url }}"
    dest: "{{ repository.dest }}"
    version: "{{ repository.version }}"
  when: not git_directory_check.stat.exists

- name: Build Tomcat container image with Podman
  containers.podman.podman_image:
    path: "{{ repository.dest }}"
    name: "{{ image.name }}"
    build:
      format: "{{ image.format }}"

- name: Run a Tomcat container instance 'demo1' on port 8008 for load balancing
  containers.podman.podman_container:
    name: "{{ container_instances.demo1.name }}"
    image: "{{ image.name }}"
    state: started
    ports:
      - "{{ container_instances.demo1.port }}"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

- name: Run another Tomcat container instance 'demo2' on port 8009 for load balancing
  containers.podman.podman_container:
    name: "{{ container_instances.demo2.name }}"
    image: "{{ image.name }}"
    state: started
    ports:
      - "{{ container_instances.demo2.port }}"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
